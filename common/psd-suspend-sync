#!/bin/bash

dbus_interface="org.freedesktop.login1"
dbus_member="PrepareForSleep"
# user name is needed for multi-user systems
user=$(id -un)

setting_inhibitor() {
  # ensure we only take one lock at a time
  if [[ "$(pgrep -u "$user" -cf "systemd-inhibit --mode=delay --what=sleep --who=profile-sync-daemon --why=psd resync on suspend")" != 0 ]]; then
    pkill -u "$user" -f "systemd-inhibit --mode=delay --what=sleep --who=profile-sync-daemon --why=psd resync on suspend"
  fi
  # Note: the risk of malfunction would not have too much consequence,
  # due to the option --mode = "delay" (timeout: InhibitDelayMaxSec = 5s)
  systemd-inhibit --mode="delay" --what="sleep" --who="profile-sync-daemon" --why="psd resync on suspend" sleep inf  &
  psd_inhibit_PID=$!
}

# take inhibit lock
setting_inhibitor

# system suspends when 'PrepareForSleep' signal is 'true':
# ... /org/freedesktop/login1: org.freedesktop.login1.Manager.PrepareForSleep (true,) ...
# system resumes when 'PrepareForSleep' signal is 'false'
# ... /org/freedesktop/login1: org.freedesktop.login1.Manager.PrepareForSleep (false,) ...
gdbus monitor --system --dest "$dbus_interface" | \
  while read -r line; do
    if [[ "$line" =~ $dbus_member ]]; then
      if [[ "$line" =~ 'true' ]]; then
        ### SUSPEND ###
        logger '[psd-suspend-sync] Issuing suspend-sync request...'
        /usr/bin/profile-sync-daemon suspend-sync
        # the lock will be released now
        [[ ! -z "$psd_inhibit_PID" ]] && kill "$psd_inhibit_PID"
      elif [[ "$line" =~ 'false' ]]; then
        ### RESUME ###
        logger '[psd-suspend-sync] re-taking inhibit lock...'
        # take inhibit lock for the next sleep cycle
        setting_inhibitor
      fi
    fi
  done

# vim:set ts=2 sw=2 et:
